* set root password
#+NAME: rpass
#+BEGIN_EXAMPLE
sudo passwd root
#+END_EXAMPLE
#+call: cmdaync(rpass)

#+RESULTS:
: command  is sended to /tmp/devopsorg

* Install sshd
#+NAME: sshd
#+BEGIN_EXAMPLE
sudo pacman -S openssh
#+END_EXAMPLE
#+call: cmdaync(sshd)

#+RESULTS:
: command  is sended to /tmp/devopsorg
** Find IP Address
#+BEGIN_SRC sh
ip link
#+END_SRC

#+RESULTS:
|            2: | enp2s0:           | <BROADCAST,MULTICAST,UP,LOWER_UP> | mtu               |  1500 | qdisc | fq_codel | state | UP      | mode | DEFAULT | group | default | qlen | 1000 |
|    link/ether | 74:d4:35:06:c1:81 | brd                               | ff:ff:ff:ff:ff:ff |       |       |          |       |         |      |         |       |         |      |      |
** Net Tools
#+NAME: nettools
#+BEGIN_EXAMPLE
sudo pacman -S net-tools
#+END_EXAMPLE
#+call: cmdaync(nettools)

#+RESULTS:
: command  is sended to /tmp/devopsorg

#+BEGIN_SRC sh
ifconfig enp2s0
#+END_SRC

#+RESULTS:
| enp2s0: | flags=4163<UP,BROADCAST,RUNNING,MULTICAST> |        mtu |          1500 |            |               |      |         |   |            |   |
| inet    | 192.168.0.100                              |    netmask | 255.255.255.0 |  broadcast | 192.168.0.255 |      |         |   |            |   |
| inet6   | fe80::76d4:35ff:fe06:c181                  |  prefixlen |            64 |    scopeid | 0x20<link>    |      |         |   |            |   |
| ether   | 74:d4:35:06:c1:81                          | txqueuelen |          1000 | (Ethernet) |               |      |         |   |            |   |
| RX      | packets                                    |       9821 |         bytes |   13432861 | (12.8         | MiB) |         |   |            |   |
| RX      | errors                                     |          0 |       dropped |          4 | overruns      |    0 | frame   | 0 |            |   |
| TX      | packets                                    |       6783 |         bytes |     527141 | (514.7        | KiB) |         |   |            |   |
| TX      | errors                                     |          0 |       dropped |          0 | overruns      |    0 | carrier | 0 | collisions | 0 |
|         |                                            |            |               |            |               |      |         |   |            |   |

** Enable and Start sshd
#+BEGIN_SRC sh
sudo systemctl enable sshd
#+END_SRC

#+RESULTS:

#+BEGIN_SRC sh
sudo systemctl start sshd
#+END_SRC

#+RESULTS:

** run syncmd
#+NAME: test1
#+BEGIN_EXAMPLE
ls -la
#+END_EXAMPLE
#+call: cmdaync(test1)

#+RESULTS:
: command  is sended to /tmp/devopsorg

** ssh keygen
#+NAME: sshgen
#+BEGIN_EXAMPLE
ssh-keygen
#+END_EXAMPLE
#+call: cmdaync(sshgen)

#+RESULTS:
: command  is sended to /tmp/devopsorg

#+NAME: rsshgen
#+BEGIN_EXAMPLE
sudo ssh-keygen
#+END_EXAMPLE
#+call: cmdaync(rsshgen)

#+RESULTS:
: command  is sended to /tmp/devopsorg

#+END_SRC
* ssh key exchanges
#+BEGIN_SRC sh
sudo cp /home/xen1/.ssh/id_rsa.pub /root/.ssh/authorized_keys
sudo cp /root/.ssh/id_rsa.pub /home/xen1/.ssh/authorized_keys
#+END_SRC

#+RESULTS:

* ssh with javascript
** Install
#+NAME: ssh2
#+BEGIN_EXAMPLE
cd /home/xen1/devopsorg ;
npm --save install ssh2
#+END_EXAMPLE
#+call: cmdaync(ssh2)

#+RESULTS:
: command  is sended to /tmp/devopsorg

** SSh testRun
#+NAME: sshtest
#+BEGIN_EXAMPLE
node index.js
#+END_EXAMPLE
#+call: cmdaync(sshtest)

#+RESULTS:
: command  is sended to /tmp/devopsorg
* Javascript
** test1
#+BEGIN_SRC js
console.log("hello world");
#+END_SRC

#+RESULTS:
: hello world
: undefined

**  Install js6
#+NAME: babel
#+BEGIN_EXAMPLE
npm install --save-dev babel babel-cli
#+END_EXAMPLE
#+call: cmdaync(babel)

#+RESULTS:
: command  is sended to /tmp/devopsorg

** test2

#+BEGIN_SRC js :cmd "/home/xen1/devopsorg/node_modules/.bin/babel-node"
let i = 1;
console.log(i);
#+END_SRC

#+RESULTS:
: 1
: undefined
* Redis Installation
** Installation
#+NAME: redis
#+BEGIN_EXAMPLE
sudo pacman -S redis
#+END_EXAMPLE
#+call: cmdaync(redis)

#+BEGIN_SRC sh
sudo systemctl enable redis.service
#+END_SRC

#+BEGIN_SRC sh
sudo systemctl start redis.service
#+END_SRC

#+BEGIN_SRC sh
ps afx | grep redis
#+END_SRC

#+RESULTS:
| 31433 | ? | S   | 0:00 | \_                    |           grep | redis |
| 31428 | ? | Ssl | 0:00 | /usr/bin/redis-server | 127.0.0.1:6379 |       |
** npm redis
#+NAME: redis2
#+BEGIN_EXAMPLE
npm install redis --save
#+END_EXAMPLE
#+call: cmdaync(redis2)

#+RESULTS:
: command  is sended to /tmp/devopsorg

** test js redis
#+BEGIN_SRC js
  var redis = require("/home/xen1/devopsorg/node_modules/redis");
  var client = redis.createClient();
  client.publish("devopsorg.home.xen1.devopsorg.abc.sh", "helloworld3");
  client.quit();
#+END_SRC

#+RESULTS:
: undefined

** test js redis2
#+NAME: rediscli
#+BEGIN_EXAMPLE
redis-cli
#+END_EXAMPLE
#+call: cmdaync(rediscli)

#+RESULTS:
: command  is sended to /tmp/devopsorg

#+BEGIN_SRC sh
echo "hello world"
sleep 10
echo "hello world 10"
sleep 10
echo "hello world 20"

#+END_SRC

#+BEGIN_SRC js
  var redis = require("/home/xen1/devopsorg/node_modules/redis");
  var client = redis.createClient();
  client.publish("devopsorg.worker1.rotine1", "ls -l");
  client.quit();
#+END_SRC

#+RESULTS:
: undefined

* ssh automation 1
#+NAME: node2
#+BEGIN_EXAMPLE
node index2.js
#+END_EXAMPLE
#+call: cmdaync(node2)

#+RESULTS:
: command  is sended to /tmp/devopsorg
* Heads UPs
** Object Literals
#+BEGIN_SRC js
    var flight = {
      airline: "Ocenic",
      number: 815,
      departure: {
        IATA: "SYD",
        time: "2004-05-22 14:55",
        city: "Sydney"
      },
      arrival: {
        IATA: "LAX",
        time: "2004-09-23 10:42",
        city: "Los Angeles"
      }
    };
  return {
    "f": flight["departure"].IATA,
    "m": flight["middle"] || "unknown",
    "e": flight.equipment && flight.equipment.model
  }
#+END_SRC

#+RESULTS:
: { f: 'SYD', m: 'unknown', e: undefined }

** Prototype
#+BEGIN_SRC js
  if (typeof Object.create !== 'function'){
         Object.create = function (o) {
             var F = function () {};
             F.prototype = o;
             return new F();
         };

     }
  var another_stooge = Object.create(stooge);
another_stooge['first-name'] = 'Harry';
another_stooge['middle-name'] = 'M';
another_stooge.nickname = 'Moe';
stooge.profession = 'actor';
return another_stooge.profession;


#+END_SRC

#+RESULTS:
** Relection
*** Int
#+BEGIN_SRC js
return typeof 10
#+END_SRC

#+RESULTS:
: number

*** String
#+BEGIN_SRC js
return typeof "abc"
#+END_SRC

#+RESULTS:
: string

*** Object
#+BEGIN_SRC js
return typeof { "a": 1, "b": 2 }
#+END_SRC

#+RESULTS:
: object

*** function
#+BEGIN_SRC js
  return typeoff "abc".toString
#+END_SRC

#+RESULTS:
** Begining Reactjs
#+BEGIN_SRC js
  var redis = require("/home/xen1/devopsorg/node_modules/redis");
  var client = redis.createClient();
  client.publish("devopsorg.worker1.rotine1",
                 "npm install --save-dev webpack webpack-dev-server");
  client.quit();
#+END_SRC

#+RESULTS:
: undefined
